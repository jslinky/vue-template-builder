

//*******************************
//    MENU: Custom Prop Rulesets - WORK IN PROGRESS
//*******************************

//-------------------
//  Menu props
//--------------------

#props {
  .menu() {
    @menu: {
      --menu-fontFamily                            : @menu-fontFamily;
      --menu-fontSizeVal                           : @menu-fontSizeVal;
      --menu-fontSize                              : ~"calc("var(--menu-fontSizeVal) ~"/" var(--fontSizeRoot) ~"* 1rem)";
      --menu-background                            : @menu-background;
      --menu-borderColor                           : @menu-borderColor;
      --menu-borderWidthVal                        : @menu-borderWidthVal;
      --menu-borderWidth                           : ~"calc("var(--menu-borderWidthVal) ~"/" var(--fontSizeRoot) ~"* 1rem)"; 
      --menu-borderRadius                          : @menu-borderRadius;
    };
    @menu-item: {
      --menu-itemBackground                        : @menu-itemBackground;
      --menu-itemTextColor                         : @menu-itemTextColor;
      --menu-itemVerticalPadding                   : ~"var(--@{menu-itemVerticalPadding})";
      --menu-itemHorizontalPaddingSmallScreen      : ~"var(--@{menu-itemHorizontalPaddingSmallScreen})";
      --menu-itemHorizontalPaddingLargeScreen      : ~"var(--@{menu-itemHorizontalPaddingLargeScreen})";      
      --menu-itemHorizontalPadding                 : var(--menu-itemHorizontalPaddingSmallScreen);
      --menu-itemTextTransform                     : @menu-itemTextTransform;
      --menu-itemFontWeight                        : @menu-itemFontWeight;      
      --menu-itemLetterSpacingVal                  : @menu-itemLetterSpacingVal;   
      --menu-itemLetterSpacing                     : ~"calc( (var(--menu-itemLetterSpacingVal) / var(--fontSizeRoot)) *  1rem)";       
      --menu-itemFontSizeSmallScreen               : ~"var(--@{menu-itemFontSizeSmallScreen})";
      --menu-itemFontSizeLargeScreen               : ~"var(--@{menu-itemFontSizeLargeScreen})";      
      --menu-itemFontSize                          : var(--menu-itemFontSizeSmallScreen, @@menu-itemFontSizeSmallScreen);
    };    
    @menu-item-underline: {
      --menu-underlineHeight                       : @menu-underlineHeight;
      --menu-underlineWidth                        : @menu-underlineWidth; 
      
      --menu-underlineColor                        : @menu-underlineColor;
      --menu-underlineColorOpacity                 : @menu-underlineColorOpacity;
      --menu-hoverUnderlineColorOpacity            : @menu-hoverUnderlineColorOpacity;
      --menu-underlineLeftPos                      : @menu-underlineLeftPos;

      --menu-underlineBottomPos                    : @menu-underlineBottomPos;
      // @menu-underlineTransition                   : @defaultTransition;
      // @menu-underlineTransitionFallback           : @defaultTransitionFallback;      

      ////// Reassign o-btn__underline properties
      --o-btn-underlineHeight                      : var(--menu-underlineHeight);
      --o-btn-underlineWidth                       : var(--menu-underlineWidth);
      --o-btn-underlineBackground                  : var(--menu-underlineColor);
      --o-btn-underlineOpacity                     : var(--menu-underlineColorOpacity);
      --o-btn-underlineLeftPos                     : var(--menu-underlineLeftPos);
      --o-btn-underlineBottomPos                   : var(--menu-underlineBottomPos);
      // --o-btn-underlineTransition                  : var(--o-btn-transition);
      // --o-btn-underlineBoxShadow                   : 1px 1px 0 0 rgba(0,0,0,0.5);      
    };    
    @menu-item-states: {
      // Hovered
      --menu-hoverColor                            : @menu-hoverColor;
      --menu-hoverBackground                       : @menu-hoverBackground;
      // Active
      --menu-activeColor                           : @menu-activeColor;
      --menu-activeBackground                      : @menu-activeBackground;
      // Selected
      --menu-selectedColor                         : @menu-selectedColor;
      --menu-selectedBackground                    : @menu-selectedBackground;       
    };    
    @sub-menu: {
      // --menu-fontFamily                            : @menu-fontFamily;
      // --menu-fontSizeVal                           : @menu-fontSizeVal;
      // --menu-fontSize                              : ~"calc("var(--menu-fontSizeVal) ~"/" var(--fontSizeRoot) ~"* 1rem)";
      // --menu-borderColor                           : @menu-borderColor;
      // --menu-borderWidthVal                        : @menu-borderWidthVal;
      // --menu-borderWidth                           : ~"calc("var(--menu-borderWidthVal) ~"/" var(--fontSizeRoot) ~"* 1rem)"; 
      // --menu-borderRadius                          : @menu-borderRadius;
      --subMenuDistance                            : @subMenuDistance;
      --subMenuMargin                              : @subMenuMargin;
      --subMenuIndent                              : relativeTiny;
    };    
    @sub-menu-item: {
      --subMenu-itemFontSizeVal                    : @subMenu-itemFontSizeVal;
      --subMenu-itemFontSize                       : ~"calc("var(--subMenu-itemFontSizeVal) ~"/" var(--fontSizeRoot) ~"* 1rem)";      
      --subMenu-itemFontSizeSmallScreen            : @subMenu-itemFontSizeSmallScreen;
      --subMenu-itemFontSizeLargeScreen            : @subMenu-itemFontSizeLargeScreen;
      
      --subMenu-itemTextColor                      : @subMenu-itemTextColor;
      --subMenu-itemBackground                     : @subMenu-itemBackground;

      --subMenu-itemHorizontalPaddingSmallScreen   : ~"var(--@{subMenu-itemHorizontalPaddingSmallScreen})";
      --subMenu-itemHorizontalPaddingLargeScreen   : ~"var(--@{subMenu-itemHorizontalPaddingLargeScreen})";      

      --subMenu-itemHorizontalPadding              : var(--subMenu-itemHorizontalPaddingSmallScreen);
      --subMenu-itemVerticalPadding                : ~"var(--@{subMenu-itemVerticalPadding})";      

      //-------------------
      //        States
      //--------------------
      // Hovered
      --subMenu-hoverColor                         : @subMenu-hoverColor;
      --subMenu-hoverBackground                    : @subMenu-hoverBackground;
      // Active
      --subMenu-activeColor                        : @subMenu-activeColor;
      --subMenu-activeBackground                   : @subMenu-activeBackground;
      // Selected
      --subMenu-selectedColor                      : @subMenu-selectedColor;
      --subMenu-selectedBackground                 : @subMenu-selectedBackground; 

    };    
    @extend-prop-classes: {
        //*******************************
        //   Classes used for extending properties
        //*******************************
        // Default
        .c-menu-props { #props.menu(menu); }
        .c-menu-props-item { #props.menu(menu-item); }
        .c-menu-props-itemStates { #props.menu(menu-item-states); }
        .c-menu-props-itemUnderline { #props.menu(menu-item-underline); }
        .c-menu-props-subMenu { #props.menu(sub-menu); }
        .c-menu-props-subMenu-item { #props.menu(sub-menu-item); }  
    };
    @extend-elements: {
        //*******************************
        //   Element classes that extend related properties
        //*******************************          
        .c-menu { &:extend(.c-menu-props); }
        // TBC      

    };
    @output-custom-properties: {
      #components.menu-variables();
      .output-custom-properties() when 
      (@customPropFallback = false) and (@local-scoped-custom-prop-fallback = false) and (@static-variables-only = false), 
      (@customPropFallback = true) and (@static-variables-only = false),
      (@customPropFallback = false) and (@local-scoped-custom-prop-fallback = true) {
        //*******************************
        //   Classes used for extending properties
        //*******************************
        #props.menu(extend-prop-classes);
        //*******************************
        //   Element classes that extend related properties
        //*******************************        
        #props.menu(extend-elements);
      }
      .output-custom-properties();
    };
  }
}

//*******************************
//   DEFINE MIXIN
//*******************************

#props {
  .menu(@item) {
      #props.menu();
      #components.menu-variables();
      @rules: @@item;
      @rules();
  }
}

//*******************************
//   Init module custom property output
//*******************************
#props.menu(output-custom-properties);


    
